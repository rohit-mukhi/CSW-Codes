// Check why last element is not sorting
import java.util.Scanner;

public class Question5 {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        Students arr[] = new Students[10];
        int idx = 0;
        char ch = 'y';
        while(idx < 10 && ch=='y') {
            System.out.print("Name : ");
            String name = scan.next();
            System.out.print("Roll no : ");
            int roll = scan.nextInt();
            System.out.print("Marks : ");
            double marks = scan.nextDouble();
            arr[idx++] = new Students(name, roll, marks);
            System.out.print("Do you want to continue : ");
            ch = scan.next().charAt(0);
            ch = Character.toLowerCase(ch);
        }

        // Bubble sort begins here
        for(int i=0; i<idx-1; i++) {
            for(int j=0; j<idx-i-1; j++) {
                if(arr[j].compareTo(arr[j+1]) > 0) {
                    Students temp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] = temp;
                }
            }
        }

        System.out.println();
        System.out.println("Student Details Sorted : ");

        for(int i=0; i<idx; i++) {
            System.out.println("Name : " + arr[i].getName() + "\nRoll no : " + arr[i].getRoll() + "\nMarks : " + arr[i].getMarks());
            System.out.println();
        }

        scan.close();
    }
}

class Students implements Comparable<Students> {
    private String name;
    private int roll;
    private double marks;

    Students(String name, int roll, double marks) {
        this.name = name;
        this.roll = roll;
        this.marks = marks;
    }

    void setName(String name) {
        this.name = name;
    }

    void setRoll(int roll) {
        this.roll = roll;
    }

    void setMarks(double marks) {
        this.marks = marks;
    }

    String getName() {
        return this.name;
    }

    int getRoll() {
        return this.roll;
    }

    double getMarks() {
        return this.marks;
    }

    @Override 
    public int compareTo(Students other) {
        if(this.roll > other.getRoll()) return 1;
        else return 0;
    }
}
